using UnityEngine;
using Cinemachine;

public class PortalTrigger : MonoBehaviour
{
    [Header("–ò–≥—Ä–æ–∫–∏")]
    public string playerTag = "Player";

    [Header("–û—Ç–∫–ª—é—á–∞–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã")]
    public GameObject[] objectsToDisable;

    [Header("–í–∫–ª—é—á–∞–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã")]
    public GameObject[] objectsToEnable;

    [Header("Cinemachine TargetGroup")]
    public CinemachineTargetGroup targetGroup;
    public Transform[] newTargets; // –Ω–æ–≤—ã–µ —Ü–µ–ª–∏ –¥–ª—è –∫–∞–º–µ—Ä—ã

    public float targetWeight = 1f;
    public float targetRadius = 2f;

    [Header("–ë–∞—Ä—å–µ—Ä")]
    public GameObject barrier;

    private bool triggered = false;

    // üîê –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    private CinemachineTargetGroup.Target[] originalTargetGroupState;

    private void Start()
    {
        if (targetGroup != null)
        {
            originalTargetGroupState = new CinemachineTargetGroup.Target[targetGroup.m_Targets.Length];
            for (int i = 0; i < targetGroup.m_Targets.Length; i++)
            {
                originalTargetGroupState[i].target = targetGroup.m_Targets[i].target;
                originalTargetGroupState[i].weight = targetGroup.m_Targets[i].weight;
                originalTargetGroupState[i].radius = targetGroup.m_Targets[i].radius;
            }
        }
    }

    private void OnTriggerEnter2D(Collider2D other)
    {
        if (triggered || !other.CompareTag(playerTag)) return;

        triggered = true;

        // –í—ã–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ä—ã–µ
        foreach (GameObject obj in objectsToDisable)
            if (obj != null) obj.SetActive(false);

        // –í–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–µ
        foreach (GameObject obj in objectsToEnable)
            if (obj != null) obj.SetActive(true);

        // –ó–∞–º–µ–Ω—è–µ–º —Ü–µ–ª–∏ –∫–∞–º–µ—Ä—ã
        if (targetGroup != null && newTargets.Length > 0)
        {
            var newGroupTargets = new CinemachineTargetGroup.Target[newTargets.Length];
            for (int i = 0; i < newTargets.Length; i++)
            {
                newGroupTargets[i].target = newTargets[i];
                newGroupTargets[i].weight = targetWeight;
                newGroupTargets[i].radius = targetRadius;
            }
            targetGroup.m_Targets = newGroupTargets;
        }

        Debug.Log("–ü–æ—Ä—Ç–∞–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
    }

    // üì¶ –ú–µ—Ç–æ–¥ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –ø–æ–±–µ–¥–µ
    public void ResetPortalState()
    {
        // –í–µ—Ä–Ω—ë–º –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
        foreach (GameObject obj in objectsToDisable)
            if (obj != null) obj.SetActive(true);

        // –°–ø—Ä—è—á–µ–º –≤–∫–ª—é—á—ë–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ
        foreach (GameObject obj in objectsToEnable)
            if (obj != null) obj.SetActive(false);

        // –í–µ—Ä–Ω—ë–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏ –∫–∞–º–µ—Ä—ã
        if (targetGroup != null && originalTargetGroupState != null)
        {
            targetGroup.m_Targets = new CinemachineTargetGroup.Target[originalTargetGroupState.Length];
            for (int i = 0; i < originalTargetGroupState.Length; i++)
            {
                targetGroup.m_Targets[i] = originalTargetGroupState[i];
            }
        }

        // –û—Ç–∫–ª—é—á–∞–µ–º –±–∞—Ä—å–µ—Ä
        if (barrier != null)
        {
            barrier.SetActive(false);
        }

        Debug.Log("üèÅ –ü–æ–±–µ–¥–∞: –≤—Å—ë –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –Ω–∞ –º–µ—Å—Ç–æ –∏ –±–∞—Ä—å–µ—Ä —Å–Ω—è—Ç");
    }
}

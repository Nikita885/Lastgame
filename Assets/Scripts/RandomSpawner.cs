using UnityEngine;

public class RandomSpawner : MonoBehaviour
{
    public GameObject hullBreachPrefab;
    public float spawnInterval = 3f;

    private BoxCollider2D spawnArea;
    public static bool gameFinished = false;

    void Start()
    {
        spawnArea = GetComponent<BoxCollider2D>();
        if (spawnArea == null)
        {
            Debug.LogError("–ù–∞ –æ–±—ä–µ–∫—Ç–µ PlayingField –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å BoxCollider2D —Å isTrigger = true!");
            return;
        }

        InvokeRepeating(nameof(SpawnBreach), spawnInterval, spawnInterval);
    }

    void SpawnBreach()
    {
        if (gameFinished) return;

        Vector2 spawnPos = GetRandomPointInBounds(spawnArea.bounds);
        GameObject newBreach = Instantiate(hullBreachPrefab, spawnPos, Quaternion.identity);
        newBreach.SetActive(true);
    }

    Vector2 GetRandomPointInBounds(Bounds bounds)
    {
        float x = Random.Range(bounds.min.x, bounds.max.x);
        float y = Random.Range(bounds.min.y, bounds.max.y);
        return new Vector2(x, y);
    }

    // üëâ –í—ã–∑—ã–≤–∞–π —ç—Ç–æ –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–µ –∏–≥—Ä—ã
    public void RestartGame()
    {
        gameFinished = false;

        // üîÅ –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–ª–∞–≥–æ–≤
        HullBreachSwitch.ResetGameState();

        CancelInvoke();
        InvokeRepeating(nameof(SpawnBreach), 0f, spawnInterval);

        Debug.Log("üîÑ –ò–≥—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞");
    }

}
